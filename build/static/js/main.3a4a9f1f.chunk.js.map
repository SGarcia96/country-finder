{"version":3,"sources":["services/countries/getAllCountries.js","components/FIlterCountries.js","services/weather/getCurrentWeather.js","components/Weather.js","components/Country.js","components/CountrySimple.js","components/Countries.js","components/Footer.js","components/ToggleDark.js","App.js","index.js"],"names":["getAllCountries","a","axios","get","response","data","FilterCountries","newSearch","handleSearchChange","id","pointerEvents","children","Search","color","name","value","onChange","placeholder","variant","colorScheme","tabIndex","getCurrentWeather","capital","baseUrl","process","then","Weather","useState","weather","setWeather","useEffect","undefined","size","tempC","current","temp_c","tempF","temp_f","humidity","localTime","location","localtime","conditionURL","condition","icon","conditionURLFormat","substr","conditionText","text","wind","vis_km","windDirection","wind_dir","as","borderWidth","p","spacing","src","alt","boxSize","objectFit","columns","fontSize","Country","population","languages","flag","orientation","maxW","borderRadius","overflow","align","marginTop","marginBottom","map","language","CountrySimple","country","show","display","alignItems","justifyContent","m","onClick","Countries","countries","showCountry","setShowCountry","console","log","event","countryFound","filter","includes","target","countriesFound","toLowerCase","length","Footer","width","bottom","zIndex","backgroundColor","justify","href","isExternal","DiGithubBadge","ToggleDark","useColorMode","colorMode","toggleColorMode","FaMoon","FaSun","App","setCountries","setNewSearch","minHeight","centerContent","height","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"4LAGaA,EAAe,uCAAG,4BAAAC,EAAA,sEACNC,IAAMC,IAHf,oCAEe,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,4DCOfC,EAAkB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBAC3C,OACE,eAAC,IAAD,CAAaC,GAAG,SAAhB,UACE,eAAC,IAAD,8BAA4BF,KAC5B,eAAC,IAAD,WACE,cAAC,IAAD,CAAkBG,cAAc,OAAOC,SAAU,cAACC,EAAA,EAAD,CAAYC,MAAM,eACjE,cAAC,IAAD,CACEC,KAAK,SACLL,GAAG,SACHM,MAAOR,EACPS,SAAUR,EACVS,YAAY,oBACZC,QAAQ,UACRC,YAAY,MACZC,SAAS,SAGf,cAAC,IAAD,2DCvBOC,EAAiB,uCAAG,WAAOC,GAAP,eAAArB,EAAA,6DACzBsB,EADyB,wDAFCC,iCAED,cACiEF,EADjE,oBAElBpB,IAAMC,IAAIoB,GAASE,MAAK,SAACrB,GACpC,OAAOA,EAASC,QAHa,mFAAH,sD,6CCCjBqB,EAAU,SAAC,GAAiB,IAAfJ,EAAc,EAAdA,QACxB,EAA8BK,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,GAPAC,qBAAU,WACRT,EAAkBC,GACfG,MAAK,SAACG,GACLC,EAAWD,QAEd,CAACN,SAEYS,IAAZH,EACF,OAAO,cAAC,IAAD,CAASI,KAAK,OAErB,IAAMC,EAAQL,EAAQM,QAAQC,OACxBC,EAAQR,EAAQM,QAAQG,OACxBC,EAAWV,EAAQM,QAAQI,SAC3BC,EAAYX,EAAQY,SAASC,UAC7BC,EAAed,EAAQM,QAAQS,UAAUC,KACzCC,EAAkB,kBAAcH,EAAaI,OAAO,IACpDC,EAAgBnB,EAAQM,QAAQS,UAAUK,KAC1CC,EAAOrB,EAAQM,QAAQgB,OACvBC,EAAgBvB,EAAQM,QAAQkB,SAEtC,OACE,eAAC,IAAD,CAAQC,GAAG,UAAUC,YAAY,MAAMC,EAAG,EAAGC,QAAS,EAAtD,UACE,cAAC,IAAD,CACEC,IAAKZ,EACLa,IAAKX,EACLY,QAAQ,QACRC,UAAU,UAEZ,eAAC,IAAD,CAAYC,QAAS,EAAGL,QAAS,EAAGM,SAAS,OAA7C,UACE,cAAC,IAAD,2BADF,IAC6B7B,EAD7B,WACyCG,EADzC,QAEE,cAAC,IAAD,wBAFF,IAE0BE,EACxB,cAAC,IAAD,0BAHF,IAG4BC,EAC1B,cAAC,IAAD,oBAJF,IAIsBU,EAJtB,QAKE,cAAC,IAAD,yBALF,IAK2BE,S,6CCzBtBY,EAAU,SAAC,GAAoD,IAAlDjD,EAAiD,EAAjDA,KAAMQ,EAA2C,EAA3CA,QAAS0C,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC9D,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,YAAY,aACrB,eAAC,IAAD,CAAKd,GAAG,UAAUe,KAAK,KAAKd,YAAY,MAAMe,aAAa,KAAKC,SAAS,SAAzE,UACE,cAAC,IAAD,CACEb,IAAKS,EACLR,IAAG,UAAK5C,EAAL,WAGL,cAAC,IAAD,CAASuC,GAAG,KAAKrB,KAAK,KAAKuC,MAAM,SAASC,UAAU,OAAOC,aAAa,OAAxE,SAAgF3D,IAChF,eAAC,IAAD,CAAWyD,MAAM,SAAjB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,sBACA,cAAC,IAAD,CAAMT,SAAS,MAAf,SAAsBxC,OAExB,eAAC,IAAD,WACE,cAAC,IAAD,yBACA,cAAC,IAAD,UAAa0C,UAIjB,eAAC,IAAD,CAAKO,MAAM,SAAShB,EAAG,EAAGiB,UAAU,MAApC,UACE,cAAC,IAAD,wBACA,cAAC,IAAD,UACGP,EAAUS,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,UAA+BA,EAAS7D,MAAzB6D,EAAS7D,iBAKhC,cAAC,EAAD,CAASQ,QAASA,Q,SC7CXsD,EAAgB,SAAC,GAA6B,IAA3B9D,EAA0B,EAA1BA,KAAM+D,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC7C,OACE,eAAC,IAAD,CAAqBC,QAAQ,OAAOC,WAAW,SAASC,eAAe,gBAAgB3B,YAAY,MAAMC,EAAG,EAAG2B,EAAG,EAAlH,UACGpE,EACD,cAAC,IAAD,CAAQC,MAAO8D,EAAQ/D,KAAMqE,QAASL,EAAM3D,YAAY,OAAOD,QAAQ,UAAvE,oBAFaJ,ICENsE,EAAY,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UAAW9E,EAAgB,EAAhBA,UACrC,EAAsCoB,qBAAtC,mBAAO2D,EAAP,KAAoBC,EAApB,KACAC,QAAQC,IAAI,eAAiBH,GAG7B,IAAMR,EAAO,SAACY,GACZF,QAAQC,IAAI,cAAgBC,GAC5B,IAAMC,EAAeN,EAAUO,QAAO,SAAAf,GAAO,OAC3CA,EAAQ/D,KAAK+E,SAASH,EAAMI,OAAO/E,UAErCwE,EAAeI,IAGXI,EAAiBV,EAAUO,QAAO,SAAAf,GAAO,OAC7CA,EAAQ/D,KAAKkF,cAAcH,SAAStF,EAAUyF,kBAGhD,OAAID,EAAeE,QAAU,GACpB,cAAC,IAAD,4DAGWlE,IAAhBuD,EAEA,cAAC,EAAD,CAEExE,KAAMwE,EAAYxE,KAClBQ,QAASgE,EAAYhE,QACrB0C,WAAYsB,EAAYtB,WACxBC,UAAWqB,EAAYrB,UACvBC,KAAMoB,EAAYpB,MALboB,EAAYxE,MAUnBiF,EAAeE,OAAS,EAExB,cAAC,IAAD,UACGZ,EACEO,QAAO,SAAAf,GAAO,OACbA,EAAQ/D,KAAKkF,cAAcH,SAAStF,EAAUyF,kBAE/CtB,KAAI,SAAAG,GAAO,OACV,cAAC,EAAD,CAEE/D,KAAM+D,EAAQ/D,KACd+D,QAASA,EACTC,KAAMA,GAHDD,EAAQ/D,WAWvB,cAAC,IAAD,UACGuE,EACEO,QAAO,SAAAf,GAAO,OACbA,EAAQ/D,KAAKkF,cAAcH,SAAStF,EAAUyF,kBAE/CtB,KAAI,SAAAG,GAAO,OACV,cAAC,EAAD,CAEE/D,KAAM+D,EAAQ/D,KACdQ,QAASuD,EAAQvD,QACjB0C,WAAYa,EAAQb,WACpBC,UAAWY,EAAQZ,UACnBC,KAAMW,EAAQX,MALTW,EAAQ/D,Y,kCChEZoF,EAAS,WACpB,OACE,cAAC,IAAD,CAAK7C,GAAG,SAAS8C,MAAM,OAAO3B,UAAW,GAAIjB,EAAG,EAAG6C,OAAO,IAAIC,OAAO,IAAIC,gBAAgB,iBAAzF,SACE,cAAC,IAAD,CAAO/B,MAAM,SAASgC,QAAQ,SAA9B,SACE,cAAC,IAAD,CAAMC,KAAK,8CAA8CC,YAAU,EAAnE,SACE,eAAC,IAAD,CAAM5F,MAAM,QAAQiD,SAAS,OAA7B,UACE,cAAC,IAAD,CAAMjD,MAAM,QAAQ8C,QAAQ,OAAON,GAAIqD,MADzC,yB,iBCLGC,EAAa,WACxB,MAAuCC,cAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBAEnB,OACE,8BACE,cAAC,IAAD,CAAQ3B,QAAS2B,EAAjB,SACiB,UAAdD,EAAwB,cAAC,IAAD,CAAMxD,GAAI0D,MAAa,cAAC,IAAD,CAAM1D,GAAI2D,WC6BnDC,EA9BH,WACV,MAAkCtF,mBAAS,IAA3C,mBAAO0D,EAAP,KAAkB6B,EAAlB,KACA,EAAkCvF,mBAAS,IAA3C,mBAAOpB,EAAP,KAAkB4G,EAAlB,KAEArF,qBAAU,WACR9B,IAAkByB,MAAK,SAAC4D,GACtB6B,EAAa7B,QAEd,IAMH,OACE,eAAC,IAAD,CAAW9B,EAAE,IAAI2B,EAAE,IAAId,KAAK,OAAOgD,UAAU,QAAQ5C,UAAU,IAAI6C,eAAa,EAAhF,UACE,eAAC,IAAD,CAAQjD,KAAK,OAAOkD,OAAO,QAA3B,UACE,cAAC,IAAD,CAASjE,GAAG,KAAKrB,KAAK,MAAtB,4BACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEzB,UAAWA,EACXC,mBAXmB,SAACkF,GAC1ByB,EAAazB,EAAMI,OAAO/E,UAYtB,cAAC,EAAD,CAAWsE,UAAWA,EAAW9E,UAAWA,OAE9C,cAAC,EAAD,Q,2BCrBAgH,EAAQC,YAAY,CAAEC,OALb,CACbC,iBAAkB,QAClBC,oBAAoB,KAKtBC,IAASC,OACP,eAAC,IAAD,CAAgBN,MAAOA,EAAvB,UACE,cAAC,IAAD,CAAiBG,iBAAkBH,EAAME,OAAOC,mBAChD,cAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.3a4a9f1f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://restcountries.com/v2/all'\n\nexport const getAllCountries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n","import {\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  InputGroup,\n  InputLeftElement,\n  Input\n} from '@chakra-ui/react'\nimport { SearchIcon } from '@chakra-ui/icons'\n\nexport const FilterCountries = ({ newSearch, handleSearchChange }) => {\n  return (\n    <FormControl id=\"filter\">\n      <FormLabel>Find countries: {newSearch}</FormLabel>\n      <InputGroup>\n        <InputLeftElement pointerEvents=\"none\" children={<SearchIcon color=\"gray.300\" />} />\n          <Input\n            name=\"filter\"\n            id=\"filter\"\n            value={newSearch}\n            onChange={handleSearchChange}\n            placeholder=\"Type country name\"\n            variant=\"flushed\"\n            colorScheme=\"tea\"\n            tabIndex=\"0\"\n          />\n      </InputGroup>\n      <FormHelperText>Show up to 10 matches in a single search</FormHelperText>\n    </FormControl>\n  )\n}\n","import axios from 'axios'\n\nconst REACT_APP_WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY\n\nexport const getCurrentWeather = async (capital) => {\n  const baseUrl = `http://api.weatherapi.com/v1/current.json?key=${REACT_APP_WEATHER_API_KEY}&q=${capital}&aqi=no`\n  return await axios.get(baseUrl).then((response) => {\n    return response.data\n  })\n}\n","import { useState, useEffect } from 'react'\nimport { getCurrentWeather } from '../services/weather/getCurrentWeather'\nimport { Spinner } from '@chakra-ui/spinner'\nimport { HStack, Image, Text, SimpleGrid } from '@chakra-ui/react'\n\nexport const Weather = ({ capital }) => {\n  const [weather, setWeather] = useState()\n\n  useEffect(() => {\n    getCurrentWeather(capital)\n      .then((weather) => {\n        setWeather(weather)\n      })\n  }, [capital])\n\n  if (weather === undefined) {\n    return <Spinner size=\"lg\" />\n  } else {\n    const tempC = weather.current.temp_c\n    const tempF = weather.current.temp_f\n    const humidity = weather.current.humidity\n    const localTime = weather.location.localtime\n    const conditionURL = weather.current.condition.icon\n    const conditionURLFormat = `https://${conditionURL.substr(2)}`\n    const conditionText = weather.current.condition.text\n    const wind = weather.current.vis_km\n    const windDirection = weather.current.wind_dir\n\n    return (\n      <HStack as=\"section\" borderWidth=\"1px\" p={3} spacing={6}>\n        <Image\n          src={conditionURLFormat}\n          alt={conditionText}\n          boxSize=\"100px\"\n          objectFit=\"cover\"\n        />\n        <SimpleGrid columns={2} spacing={2} fontSize=\"14px\">\n          <Text>temperature:</Text> {tempC}ºC | {tempF}ºF\n          <Text>humidity:</Text> {humidity}\n          <Text>local time:</Text> {localTime}\n          <Text>wind:</Text> {wind} km/h\n          <Text>direction:</Text> {windDirection}\n        </SimpleGrid>\n      </HStack>\n    )\n  }\n}\n","import { Weather } from './Weather'\nimport {\n  Stack,\n  Divider,\n  Heading,\n  Text,\n  Box,\n  Image,\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  List,\n  ListItem\n} from '@chakra-ui/react'\n\nexport const Country = ({ name, capital, population, languages, flag }) => {\n  return (\n    <Stack>\n      <Divider orientation=\"vertical\"/>\n      <Box as=\"section\" maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        <Image\n          src={flag}\n          alt={`${name} flag`}\n        />\n\n        <Heading as=\"h2\" size=\"lg\" align=\"center\" marginTop=\"10px\" marginBottom=\"10px\">{name}</Heading>\n        <StatGroup align=\"center\">\n          <Stat>\n            <StatLabel>Capital</StatLabel>\n            <Text fontSize=\"2xl\">{capital}</Text>\n          </Stat>\n          <Stat>\n            <StatLabel>Population</StatLabel>\n            <StatNumber>{population}</StatNumber>\n          </Stat>\n        </StatGroup>\n\n        <Box align=\"center\" p={1} marginTop=\"5px\">\n          <Text>Languages</Text>\n          <List>\n            {languages.map((language) => (\n              <ListItem key={language.name}>{language.name}</ListItem>\n            ))}\n          </List>\n        </Box>\n      </Box>\n      <Weather capital={capital} />\n    </Stack>\n  )\n}\n","import { ListItem, Button } from '@chakra-ui/react'\n\nexport const CountrySimple = ({ name, country, show }) => {\n  return (\n    <ListItem key={name} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" borderWidth=\"1px\" p={1} m={1}>\n      {name}\n      <Button value={country.name} onClick={show} colorScheme=\"teal\" variant=\"outline\">\n        Show\n      </Button>\n    </ListItem>\n  )\n}\n","import { Country } from './Country'\nimport { CountrySimple } from './CountrySimple'\nimport { useState } from 'react'\nimport { Text } from '@chakra-ui/layout'\nimport { List } from '@chakra-ui/react'\n\nexport const Countries = ({ countries, newSearch }) => {\n  const [showCountry, setShowCountry] = useState()\n  console.log('showCountry ' + showCountry)\n\n  // show stores in showCountry the Country matched with full name, has full information\n  const show = (event) => {\n    console.log('event show ' + event)\n    const countryFound = countries.filter(country =>\n      country.name.includes(event.target.value)\n    )\n    setShowCountry(countryFound)\n  }\n\n  const countriesFound = countries.filter(country =>\n    country.name.toLowerCase().includes(newSearch.toLowerCase())\n  )\n\n  if (countriesFound.length >= 10) {\n    return <Text>Too many matches, specify another filter</Text>\n  }\n\n  if (showCountry !== undefined) {\n    return (\n      <Country\n        key={showCountry.name}\n        name={showCountry.name}\n        capital={showCountry.capital}\n        population={showCountry.population}\n        languages={showCountry.languages}\n        flag={showCountry.flag}\n      />\n    )\n  }\n\n  if (countriesFound.length > 1) {\n    return (\n      <List>\n        {countries\n          .filter(country =>\n            country.name.toLowerCase().includes(newSearch.toLowerCase())\n          )\n          .map(country => (\n            <CountrySimple\n              key={country.name}\n              name={country.name}\n              country={country}\n              show={show}\n            />\n          ))}\n      </List>\n    )\n  }\n\n  return (\n    <List>\n      {countries\n        .filter(country =>\n          country.name.toLowerCase().includes(newSearch.toLowerCase())\n        )\n        .map(country => (\n          <Country\n            key={country.name}\n            name={country.name}\n            capital={country.capital}\n            population={country.population}\n            languages={country.languages}\n            flag={country.flag}\n          />\n        ))}\n    </List>\n  )\n}\n","import { Box, Stack, Text, Icon, Link } from '@chakra-ui/react'\nimport { DiGithubBadge } from 'react-icons/di'\n\nexport const Footer = () => {\n  return (\n    <Box as=\"footer\" width=\"100%\" marginTop={20} p={2} bottom=\"0\" zIndex=\"1\" backgroundColor=\"blackAlpha.800\">\n      <Stack align=\"center\" justify=\"center\">\n        <Link href=\"https://github.com/SGarcia96/country-finder\" isExternal>\n          <Text color=\"white\" fontSize=\"18px\">\n            <Icon color=\"white\" boxSize=\"28px\" as={DiGithubBadge} />\n            See the code\n          </Text>\n        </Link>\n      </Stack>\n    </Box>\n  )\n}\n","import { useColorMode, Button, Icon } from '@chakra-ui/react'\nimport { FaMoon, FaSun } from 'react-icons/fa'\n\nexport const ToggleDark = () => {\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  return (\n    <div>\n      <Button onClick={toggleColorMode}>\n        {colorMode === 'light' ? <Icon as={FaMoon} /> : <Icon as={FaSun} />}\n      </Button>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { getAllCountries } from './services/countries/getAllCountries'\nimport { FilterCountries } from './components/FIlterCountries'\nimport { Countries } from './components/Countries'\nimport { Container, VStack, Heading } from '@chakra-ui/react'\nimport { Footer } from './components/Footer'\nimport { ToggleDark } from './components/ToggleDark'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [newSearch, setNewSearch] = useState('')\n\n  useEffect(() => {\n    getAllCountries().then((countries) => {\n      setCountries(countries)\n    })\n  }, [])\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  return (\n    <Container p=\"0\" m=\"0\" maxW=\"100%\" minHeight=\"100vh\" marginTop=\"6\" centerContent>\n      <VStack maxW=\"100%\" height=\"100vh\">\n        <Heading as=\"h1\" size=\"2xl\">Country Finder</Heading>\n        <ToggleDark />\n        <FilterCountries\n          newSearch={newSearch}\n          handleSearchChange={handleSearchChange}\n        />\n        <Countries countries={countries} newSearch={newSearch} />\n      </VStack>\n      <Footer />\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ChakraProvider } from '@chakra-ui/provider'\nimport { extendTheme, ColorModeScript } from '@chakra-ui/react'\n\n// Extend the theme to include custom colors, fonts, etc\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false\n}\n\nconst theme = extendTheme({ config })\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}