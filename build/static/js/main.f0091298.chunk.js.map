{"version":3,"sources":["components/FIlterCountries.js","services/weather/getCurrentWeather.js","components/Weather.js","components/Country.js","components/CountrySimple.js","components/Countries.js","App.js","services/countries/getAllCountries.js","index.js"],"names":["FilterCountries","newSearch","handleSearchChange","htmlFor","className","name","id","value","onChange","placeholder","tabIndex","getCurrentWeather","capital","a","baseUrl","process","axios","get","then","response","data","current","Weather","useState","weather","setWeather","useEffect","undefined","console","log","temp","temperature","conditionURL","weather_icons","wind","wind_speed","windDirection","wind_dir","src","alt","Country","population","languages","flag","map","language","height","width","CountrySimple","country","show","onClick","Countries","countries","showCountry","setShowCountry","event","countryFound","filter","includes","target","countriesFound","toLowerCase","length","App","setCountries","setNewSearch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0091298.chunk.js","sourcesContent":["export const FilterCountries = ({ newSearch, handleSearchChange }) => {\n  return (\n    <form>\n      <label htmlFor=\"filter\">Find countries</label>\n      <input\n        className=\"input-country\"\n        name=\"filter\"\n        id=\"filter\"\n        value={newSearch}\n        onChange={handleSearchChange}\n        placeholder=\"Enter country name\"\n        tabIndex=\"0\"\n      />\n      <br />\n    </form>\n  )\n}\n","import axios from \"axios\"\n\nconst REACT_APP_WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY\n\nexport const getCurrentWeather = async (capital) => {\n  const baseUrl = `http://api.weatherstack.com/current?access_key=${REACT_APP_WEATHER_API_KEY}&query=${capital}`\n\n  return await axios.get(baseUrl).then((response) => {\n    return response.data.current\n  })\n}\n","import { useState, useEffect } from 'react'\nimport { getCurrentWeather } from '../services/weather/getCurrentWeather'\n\nexport const Weather = ({ capital }) => {\n\n    const [weather, setWeather] = useState();\n\n    useEffect(() => {\n        getCurrentWeather(capital)\n          .then((weather) => {\n            setWeather(weather)\n          })\n      }, [capital])\n      \n\n    if (weather === undefined) {\n        return <p>Loading...</p>;\n      } else {\n        console.log(weather);\n        const temp = weather.temperature;\n        const conditionURL = weather.weather_icons[0];\n        const wind = weather.wind_speed;\n        const windDirection = weather.wind_dir;\n\n        return (\n          <div>\n            <b>temperature</b> {temp} ÂºC\n            <br />\n            <img src={conditionURL} alt=\"Loading...\" />\n            <br />\n            <b>wind </b> {wind} <b> direction</b> {windDirection}\n          </div>\n        );\n      }\n}","import { Weather } from \"./Weather\"\n\nexport const Country = ({ name, capital, population, languages, flag }) => {\n  return (\n    <div>\n      <h1>{name}</h1>\n      <p>capital: {capital}</p>\n      <p>population: {population}</p>\n      <p>\n        <strong>languages</strong>\n      </p>\n      <ul>\n        {languages.map((language) => (\n          <li key={language.name}>{language.name}</li>\n        ))}\n      </ul>\n      <img\n        className=\"country-flag\"\n        src={flag}\n        alt=\"No flag found\"\n        height=\"250\"\n        width=\"350\"\n      />\n      <Weather capital={capital} />\n    </div>\n  )\n}\n","export const CountrySimple = ({ name, country, show }) => {\n    return (\n        <li key={name}>\n            {name}\n            <button value={country.name} onClick={show}>\n                Show\n            </button>\n        </li>\n    )\n}","import { Country } from './Country'\nimport { CountrySimple } from './CountrySimple'\nimport { useState } from 'react'\n\nexport const Countries = ({ countries, newSearch }) => {\n    const [showCountry, setShowCountry] = useState();\n\n    //show store in showCountry the Country matched with full name, has full information\n    const show = (event) => {\n        const countryFound = countries.filter(country => \n            country.name.includes(event.target.value)\n        );\n        setShowCountry(countryFound[0]);\n    }\n\n    const countriesFound = countries.filter(country => \n        country.name.toLowerCase().includes(newSearch.toLowerCase())\n    );\n\n    if (countriesFound.length >= 10) {\n        return <p>Too many matches, specify another filter</p>;\n    }\n\n    if (showCountry !== undefined) {\n        return (\n            <Country\n                key={showCountry.name}\n                name={showCountry.name}\n                capital={showCountry.capital}\n                population={showCountry.population}\n                languages={showCountry.languages}\n                flag={showCountry.flag}  \n            />\n        );\n    }\n\n    if (countriesFound.length > 1) {\n        return (\n            <ul>\n                {countries\n                    .filter(country =>\n                        country.name.toLowerCase().includes(newSearch.toLowerCase())\n                    )\n                    .map(country => (\n                        <CountrySimple\n                            key={country.name}\n                            name={country.name}\n                            country={country}\n                            show={show}\n                        />\n                    ))}\n            </ul>\n        )\n    }\n\n    return (\n        <ul>\n            {countries\n                .filter(country =>\n                    country.name.toLowerCase().includes(newSearch.toLowerCase())\n                )\n                .map(country => (\n                    <Country\n                        key={country.name}\n                        name={country.name}\n                        capital={country.capital}\n                        population={country.population}\n                        languages={country.languages}\n                        flag={country.flag}\n                    />\n                ))}\n        </ul>\n    )\n}","import React, { useState, useEffect } from \"react\"\nimport { getAllCountries } from \"./services/countries/getAllCountries\"\nimport { FilterCountries } from \"./components/FIlterCountries\"\nimport { Countries } from \"./components/Countries\"\nimport \"./App.css\"\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [newSearch, setNewSearch] = useState(\"\")\n\n  useEffect(() => {\n    getAllCountries().then((countries) => {\n      setCountries(countries)\n    })\n  }, [])\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <section className=\"App-section\">\n        <h1 className=\"App-title\">Country Finder</h1>\n        <FilterCountries\n          newSearch={newSearch}\n          handleSearchChange={handleSearchChange}\n        />\n        <Countries countries={countries} newSearch={newSearch} />\n      </section>\n    </div>\n  )\n}\n\nexport default App\n","import axios from \"axios\";\nconst baseUrl = \"https://restcountries.eu/rest/v2/all\"\n\nexport const getAllCountries = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => {\n            return response.data; \n        })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App className />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}